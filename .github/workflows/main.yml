name: Start Pixelmon Server (Cloudflare Tunnel)

on:
  workflow_dispatch:

jobs:
  start-server:
    runs-on: ubuntu-latest
    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4

      - name: 2. Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 3. Configure Rclone
        env:
          ACCESS_TOKEN: ${{ secrets.RCLONE_ACCESS_TOKEN }}
          REFRESH_TOKEN: ${{ secrets.RCLONE_REFRESH_TOKEN }}
          TOKEN_TYPE: ${{ secrets.RCLONE_TOKEN_TYPE }}
          EXPIRY: ${{ secrets.RCLONE_EXPIRY }}
        run: |
          echo "Installing rclone..."
          sudo curl -s https://rclone.org/install.sh | sudo bash
          mkdir -p ~/.config/rclone
          TOKEN_JSON=$(printf '{"access_token":"%s","token_type":"%s","refresh_token":"%s","expiry":"%s"}' \
            "$ACCESS_TOKEN" "$TOKEN_TYPE" "$REFRESH_TOKEN" "$EXPIRY")
          cat > ~/.config/rclone/rclone.conf << EOF
[gdrive]
type = drive
scope = drive
token = $TOKEN_JSON
EOF
          echo "✅ Rclone configured"

      - name: 4. Copy World Data from Google Drive
        run: |
          echo "Copying world data..."
          rclone copy gdrive:Minecraft_Server_Data . -P

      - name: 5. Download Server & Mods
        run: |
          mkdir -p mods
          wget -q -O arclight-server.jar "https://github.com/SketchyPixelmon/pixelmon/releases/download/v1.0.0/arclight.jar"
          wget -q -O mods/pixelmon.jar "https://github.com/SketchyPixelmon/pixelmon/releases/download/v1.0.0/Pixelmon-1.16.5-9.1.13-universal.jar"
          wget -q -O mods/jei.jar "https://github.com/SketchyPixelmon/pixelmon/releases/download/v1.0.0/jei-1.16.5-7.7.1.153.jar"
          echo "✅ Server files downloaded"

      - name: 6. Install & Run Cloudflare Tunnel
        env:
          TUNNEL_TOKEN: ${{ secrets.CLOUDFLARE_TUNNEL_TOKEN }}
        run: |
          echo "Installing cloudflared..."
          wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb || sudo apt-get -f install -y

          echo "Starting Cloudflare Tunnel (TCP port 25565)..."
          nohup cloudflared tunnel run --token "$TUNNEL_TOKEN" > cloudflared.log 2>&1 &
          
          sleep 10

          echo "Checking tunnel status..."
          tail -n 30 cloudflared.log

          # Extract the public URL from logs
          # Look for: "info" msg="Connection established" or "info" msg="Starting connection"
          if grep -q "Connection established" cloudflared.log; then
            echo "✅ Tunnel is UP"
          else
            echo "❌ Tunnel failed to start. Dumping full log:"
            cat cloudflared.log
            exit 1
          fi

      - name: 7. Notify & Start Minecraft
        run: |
          # Get the public address from tunnel name
          # Replace 'pixelmon-tunnel' with your actual tunnel name
          TUNNEL_URL="pixelmon-tunnel.trycloudflare.com"
          
          echo "Sending server online message..."
          curl -H "Content-Type: application/json" \
               -d '{"content": "✅ **Pixelmon Server is Online!**\nConnect to: `'\$TUNNEL_URL:25565'`"}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

          echo "Starting Minecraft server..."
          java -Xmx6G -Xms6G -jar arclight-server.jar nogui

      - name: 8. (Shutdown) Sync World to Cloud
        if: always()
        run: |
          echo "Syncing world data back to Google Drive..."
          curl -H "Content-Type: application/json" \
               -d '{"content": "❌ **Server is Offline.** World saved."}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}
          rclone sync . gdrive:Minecraft_Server_Data -P \
            --include "/world/**" \
            --include "/plugins/GriefPreventionData/**" \
            --include "/logs/**"
