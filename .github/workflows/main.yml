name: Start Pixelmon Server (Paranoid Clean Slate)

on:
  workflow_dispatch:

jobs:
  start-server:
    runs-on: ubuntu-latest

    steps:
      - name: 1. Checkout Repository Files
        uses: actions/checkout@v4

      - name: 2. Setup Java 17 Environment
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 3. Configure Rclone
        env:
          ACCESS_TOKEN: ${{ secrets.RCLONE_ACCESS_TOKEN }}
          REFRESH_TOKEN: ${{ secrets.RCLONE_REFRESH_TOKEN }}
          TOKEN_TYPE: ${{ secrets.RCLONE_TOKEN_TYPE }}
          EXPIRY: ${{ secrets.RCLONE_EXPIRY }}
        run: |
          echo "Setting up Rclone..."
          sudo curl https://rclone.org/install.sh | sudo bash
          mkdir -p ~/.config/rclone
          TOKEN_JSON=$(printf '{"access_token":"%s","token_type":"%s","refresh_token":"%s","expiry":"%s"}' "$ACCESS_TOKEN" "$TOKEN_TYPE" "$REFRESH_TOKEN" "$EXPIRY")
          echo "[gdrive]" > ~/.config/rclone/rclone.conf
          echo "type = drive" >> ~/.config/rclone/rclone.conf
          echo "scope = drive" >> ~/.config/rclone/rclone.conf
          echo "token = $TOKEN_JSON" >> ~/.config/rclone/rclone.conf

      - name: 4. Copy World Data from Cloud
        run: |
          echo "Copying world data..."
          rclone copy gdrive:Minecraft_Server_Data . -P

      - name: 5. Download Server and Mods
        run: |
          echo "Downloading server files..."
          mkdir -p mods
          wget -q -O arclight-server.jar "https://github.com/SketchyPixelmon/pixelmon/releases/download/v1.0.0/arclight.jar"
          wget -q -O mods/pixelmon.jar "https://github.com/SketchyPixelmon/pixelmon/releases/download/v1.0.0/Pixelmon-1.16.5-9.1.13-universal.jar"
          wget -q -O mods/jei.jar "https://github.com/SketchyPixelmon/pixelmon/releases/download/v1.0.0/jei-1.16.5-7.7.1.153.jar"

      - name: 6. Start Server in Background
        run: |
          echo "Starting Minecraft server in background..."
          java -Xmx6G -Xms6G -jar arclight-server.jar nogui > server.log 2>&1 &

      - name: 7. Extract Playit Tunnel Link
        run: |
          echo "Waiting for Playit plugin to initialize..."
          sleep 30
          echo "Extracting tunnel link from logs..."
          TUNNEL_LINK=$(grep -oP 'https://playit.gg/mc/\w+' server.log | tail -1)
          if [ -n "$TUNNEL_LINK" ]; then
            echo "Tunnel link found: $TUNNEL_LINK"
            echo "$TUNNEL_LINK" > tunnel.txt
          else
            echo "Tunnel link not found."
            echo "Tunnel link not found." > tunnel.txt

      - name: 8. Notify Discord with Tunnel Link
        run: |
          TUNNEL_LINK=$(cat tunnel.txt)
          echo "Sending Server Online message to Discord..."
          curl -H "Content-Type: application/json" \
               -d '{"content": "✅ **Server is now starting!**\nConnect via: '"$TUNNEL_LINK"'"}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: 9. Wait for Server to Exit
        run: |
          echo "Waiting for server to shut down..."
          wait

      - name: 10. (Shutdown) Sync World Data to Cloud
        if: always()
        run: |
          echo "Server is shutting down. Syncing world to cloud..."
          curl -H "Content-Type: application/json" \
               -d '{"content": "❌ **Server is Offline.**\nSaving world data now."}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}
          rclone sync . gdrive:Minecraft_Server_Data -P \
            --include "/world/**" \
            --include "/plugins/GriefPreventionData/**" \
            --include "/logs/**"
